[
  {
    "id": "Application exited unexpectedly",
    "translation": "Application exited unexpectedly"
  },
  {
    "id": "Run '{{.Name}} --help' for usage.\n",
    "translation": "Run '{{.Name}} --help' for usage.\n"
  },
  {
    "id": "error: ",
    "translation": "error: "
  },
  {
    "id": "not set",
    "translation": "not set"
  },
  {
    "id": "OpenWhisk cloud computing command line interface.",
    "translation": "OpenWhisk cloud computing command line interface."
  },
  {
    "id": "verbose output",
    "translation": "verbose output"
  },
  {
    "id": "debug level output",
    "translation": "debug level output"
  },
  {
    "id": "authorization `KEY`",
    "translation": "authorization `KEY`"
  },
  {
    "id": "whisk API `HOST`",
    "translation": "whisk API `HOST`"
  },
  {
    "id": "whisk API `VERSION`",
    "translation": "whisk API `VERSION`"
  },
  {
    "id": "bypass certificate checking",
    "translation": "bypass certificate checking"
  },
  {
    "id": "Unable to initialize server connection: {{.err}}",
    "translation": "Unable to initialize server connection: {{.err}}"
  },
  {
    "id": "Parameter arguments must be a key value pair: {{.args}}",
    "translation": "Parameter arguments must be a key value pair: {{.args}}"
  },
  {
    "id": "Annotation arguments must be a key value pair: {{.args}}",
    "translation": "Annotation arguments must be a key value pair: {{.args}}"
  },
  {
    "id": "Failed to parse arguments: {{.err}}",
    "translation": "Failed to parse arguments: {{.err}}"
  },
  {
    "id": "work with namespaces",
    "translation": "work with namespaces"
  },
  {
    "id": "list entities in the current namespace",
    "translation": "list entities in the current namespace"
  },
  {
    "id": "Unable to obtain the list of available namespaces: {{.err}}",
    "translation": "Unable to obtain the list of available namespaces: {{.err}}"
  },
  {
    "id": "get triggers, actions, and rules in the registry for a namespace",
    "translation": "get triggers, actions, and rules in the registry for a namespace"
  },
  {
    "id": "'{{.name}}' is not a valid qualified name: {{.err}}",
    "translation": "'{{.name}}' is not a valid qualified name: {{.err}}"
  },
  {
    "id": "Unable to obtain the list of entities for namespace '{{.namespace}}': {{.err}}",
    "translation": "Unable to obtain the list of entities for namespace '{{.namespace}}': {{.err}}"
  },
  {
    "id": "Entities in namespace: {{.namespace}}\n",
    "translation": "Entities in namespace: {{.namespace}}\n"
  },
  {
    "id": "list available namespaces",
    "translation": "list available namespaces"
  },
  {
    "id": "work with packages",
    "translation": "work with packages"
  },
  {
    "id": "bind parameters to a package",
    "translation": "bind parameters to a package"
  },
  {
    "id": "Invalid parameter argument '{{.param}}': {{.err}}",
    "translation": "Invalid parameter argument '{{.param}}': {{.err}}"
  },
  {
    "id": "Invalid annotation argument '{{.annotation}}': {{.err}}",
    "translation": "Invalid annotation argument '{{.annotation}}': {{.err}}"
  },
  {
    "id": "Binding creation failed: {{.err}}",
    "translation": "Binding creation failed: {{.err}}"
  },
  {
    "id": "{{.ok}} created binding {{.name}}\n",
    "translation": "{{.ok}} created binding {{.name}}\n"
  },
  {
    "id": "create a new package",
    "translation": "create a new package"
  },
  {
    "id": "Package creation failed: {{.err}}",
    "translation": "Package creation failed: {{.err}}"
  },
  {
    "id": "{{.ok}} created package {{.name}}\n",
    "translation": "{{.ok}} created package {{.name}}\n"
  },
  {
    "id": "update an existing package, or create a package if it does not exist",
    "translation": "update an existing package, or create a package if it does not exist"
  },
  {
    "id": "Package update failed: {{.err}}",
    "translation": "Package update failed: {{.err}}"
  },
  {
    "id": "{{.ok}} updated package {{.name}}\n",
    "translation": "{{.ok}} updated package {{.name}}\n"
  },
  {
    "id": "get package",
    "translation": "get package"
  },
  {
    "id": "Package get failed: {{.err}}",
    "translation": "Package get failed: {{.err}}"
  },
  {
    "id": "{{.ok}} got package {{.name}}\n",
    "translation": "{{.ok}} got package {{.name}}\n"
  },
  {
    "id": "delete package",
    "translation": "delete package"
  },
  {
    "id": "Package delete failed: {{.err}}",
    "translation": "Package delete failed: {{.err}}"
  },
  {
    "id": "{{.ok}} deleted package {{.name}}\n",
    "translation": "{{.ok}} deleted package {{.name}}\n"
  },
  {
    "id": "list all packages",
    "translation": "list all packages"
  },
  {
    "id": "No valid namespace detected. Run 'wsk property set --namespace' or ensure the name argument is preceded by a \"/\"",
    "translation": "No valid namespace detected. Run 'wsk property set --namespace' or ensure the name argument is preceded by a \"/\""
  },
  {
    "id": "Unable to obtain the list of packages for namespace '{{.name}}': {{.err}}",
    "translation": "Unable to obtain the list of packages for namespace '{{.name}}': {{.err}}"
  },
  {
    "id": "refresh package bindings",
    "translation": "refresh package bindings"
  },
  {
    "id": "Package refresh for namespace '{{.name}}' failed: {{.err}}",
    "translation": "Package refresh for namespace '{{.name}}' failed: {{.err}}"
  },
  {
    "id": "{{.name}} refreshed successfully\n",
    "translation": "{{.name}} refreshed successfully\n"
  },
  {
    "id": "created bindings:",
    "translation": "created bindings:"
  },
  {
    "id": "updated bindings:",
    "translation": "updated bindings:"
  },
  {
    "id": "deleted bindings:",
    "translation": "deleted bindings:"
  },
  {
    "id": "The package refresh feature is not implemented in the target deployment",
    "translation": "The package refresh feature is not implemented in the target deployment"
  },
  {
    "id": "Package refresh for namespace '{{.name}}' failed due to unexpected HTTP status code: {{.code}}",
    "translation": "Package refresh for namespace '{{.name}}' failed due to unexpected HTTP status code: {{.code}}"
  },
  {
    "id": "annotation values in `KEY VALUE` format",
    "translation": "annotation values in `KEY VALUE` format"
  },
  {
    "id": "`FILE` containing annotation values in JSON format",
    "translation": "`FILE` containing annotation values in JSON format"
  },
  {
    "note-to-translators": "DO NOT TRANSLATE THE 'yes' AND 'no'.  THOSE ARE FIXED CLI ARGUMENT VALUES",
    "id": "package visibility `SCOPE`; yes = shared, no = private",
    "translation": "package visibility `SCOPE`; yes = shared, no = private"
  },
  {
    "id": "summarize package details",
    "translation": "summarize package details"
  },
  {
    "id": "include publicly shared entities in the result",
    "translation": "include publicly shared entities in the result"
  },
  {
    "id": "exclude the first `SKIP` number of packages from the result",
    "translation": "exclude the first `SKIP` number of packages from the result"
  },
  {
    "id": "only return `LIMIT` number of packages from the collection",
    "translation": "only return `LIMIT` number of packages from the collection"
  },
  {
    "id": "property",
    "translation": "property"
  },
  {
    "id": "work with whisk properties",
    "translation": "work with whisk properties"
  },
  {
    "id": "set property",
    "translation": "set property"
  },
  {
    "id": "Unable to set the property value: {{.err}}",
    "translation": "Unable to set the property value: {{.err}}"
  },
  {
    "id": "{{.ok}} whisk auth set to {{.auth}}\n",
    "translation": "{{.ok}} whisk auth set to {{.auth}}\n"
  },
  {
    "id": "Unable to set API host value; the API host value '{{.apihost}}' is invalid: {{.err}}",
    "translation": "Unable to set API host value; the API host value '{{.apihost}}' is invalid: {{.err}}"
  },
  {
    "id": "{{.ok}} whisk API host set to {{.host}}\n",
    "translation": "{{.ok}} whisk API host set to {{.host}}\n"
  },
  {
    "id": "{{.ok}} whisk API version set to {{.version}}\n",
    "translation": "{{.ok}} whisk API version set to {{.version}}\n"
  },
  {
    "id": "Authenticated user does not have namespace '{{.name}}'; set command failed: {{.err}}",
    "translation": "Authenticated user does not have namespace '{{.name}}'; set command failed: {{.err}}"
  },
  {
    "id": "Namespace '{{.name}}' is not in the list of entitled namespaces",
    "translation": "Namespace '{{.name}}' is not in the list of entitled namespaces"
  },
  {
    "id": "{{.ok}} whisk namespace set to {{.name}}\n",
    "translation": "{{.ok}} whisk namespace set to {{.name}}\n"
  },
  {
    "id": "Unable to set the property value(s): {{.err}}",
    "translation": "Unable to set the property value(s): {{.err}}"
  },
  {
    "id": "unset property",
    "translation": "unset property"
  },
  {
    "id": "Unable to unset the property value: {{.err}}",
    "translation": "Unable to unset the property value: {{.err}}"
  },
  {
    "id": "{{.ok}} whisk auth unset",
    "translation": "{{.ok}} whisk auth unset"
  },
  {
    "id": "{{.ok}} whisk namespace unset",
    "translation": "{{.ok}} whisk namespace unset"
  },
  {
    "id": "{{.ok}} whisk API host unset",
    "translation": "{{.ok}} whisk API host unset"
  },
  {
    "id": "{{.ok}} whisk API version unset",
    "translation": "{{.ok}} whisk API version unset"
  },
  {
    "id": "; the default value of {{.default}} will be used.\n",
    "translation": "; the default value of {{.default}} will be used.\n"
  },
  {
    "id": "; there is no default value that can be used.\n",
    "translation": "; there is no default value that can be used.\n"
  },
  {
    "id": "get property",
    "translation": "get property"
  },
  {
    "id": "whisk auth",
    "translation": "whisk auth"
  },
  {
    "id": "whisk API host",
    "translation": "whisk API host"
  },
  {
    "id": "whisk API version",
    "translation": "whisk API version"
  },
  {
    "id": "whisk namespace",
    "translation": "whisk namespace"
  },
  {
    "id": "whisk CLI version",
    "translation": "whisk CLI version"
  },
  {
    "id": "Unknown",
    "translation": "Unknown"
  },
  {
    "id": "whisk API build",
    "translation": "whisk API build"
  },
  {
    "id": "whisk API build number",
    "translation": "whisk API build number"
  },
  {
    "id": "Unable to obtain API build information: {{.err}}",
    "translation": "Unable to obtain API build information: {{.err}}"
  },
  {
    "id": "authorization key",
    "translation": "authorization key"
  },
  {
    "id": "whisk API build version",
    "translation": "whisk API build version"
  },
  {
    "id": "all properties",
    "translation": "all properties"
  },
  {
    "id": "whisk `NAMESPACE`",
    "translation": "whisk `NAMESPACE`"
  },
  {
    "id": "Unable to locate properties file '{{.filename}}': {{.err}}",
    "translation": "Unable to locate properties file '{{.filename}}': {{.err}}"
  },
  {
    "id": "Unable to read the properties file '{{.filename}}': {{.err}}",
    "translation": "Unable to read the properties file '{{.filename}}': {{.err}}"
  },
  {
    "id": "Invalid host address '{{.host}}': {{.err}}",
    "translation": "Invalid host address '{{.host}}': {{.err}}"
  },
  {
    "id": "Whisk properties file write failure: {{.err}}",
    "translation": "Whisk properties file write failure: {{.err}}"
  },
  {
    "id": "work with rules",
    "translation": "work with rules"
  },
  {
    "id": "enable rule",
    "translation": "enable rule"
  },
  {
    "id": "Unable to enable rule '{{.name}}': {{.err}}",
    "translation": "Unable to enable rule '{{.name}}': {{.err}}"
  },
  {
    "id": "{{.ok}} enabled rule {{.name}}\n",
    "translation": "{{.ok}} enabled rule {{.name}}\n"
  },
  {
    "id": "disable rule",
    "translation": "disable rule"
  },
  {
    "id": "Unable to disable rule '{{.name}}': {{.err}}",
    "translation": "Unable to disable rule '{{.name}}': {{.err}}"
  },
  {
    "id": "{{.ok}} disabled rule {{.name}}\n",
    "translation": "{{.ok}} disabled rule {{.name}}\n"
  },
  {
    "id": "get rule status",
    "translation": "get rule status"
  },
  {
    "id": "Unable to retrieve rule '{{.name}}': {{.err}}",
    "translation": "Unable to retrieve rule '{{.name}}': {{.err}}"
  },
  {
    "id": "{{.ok}} rule {{.name}} is {{.status}}\n",
    "translation": "{{.ok}} rule {{.name}} is {{.status}}\n"
  },
  {
    "id": "create new rule",
    "translation": "create new rule"
  },
  {
    "id": "Unable to create rule '{{.name}}': {{.err}}",
    "translation": "Unable to create rule '{{.name}}': {{.err}}"
  },
  {
    "id": "{{.ok}} created rule {{.name}}\n",
    "translation": "{{.ok}} created rule {{.name}}\n"
  },
  {
    "id": "update an existing rule, or create a rule if it does not exist",
    "translation": "update an existing rule, or create a rule if it does not exist"
  },
  {
    "id": "Unable to update rule '{{.name}}': {{.err}}",
    "translation": "Unable to update rule '{{.name}}': {{.err}}"
  },
  {
    "id": "{{.ok}} updated rule {{.name}}\n",
    "translation": "{{.ok}} updated rule {{.name}}\n"
  },
  {
    "id": "get rule",
    "translation": "get rule"
  },
  {
    "id": "Unable to retrieve rule '{{.name}}': {{.err}}",
    "translation": "Unable to retrieve rule '{{.name}}': {{.err}}"
  },
  {
    "id": "{{.ok}} got rule {{.name}}\n",
    "translation": "{{.ok}} got rule {{.name}}\n"
  },
  {
    "id": "delete rule",
    "translation": "delete rule"
  },
  {
    "id": "Unable to delete rule '{{.name}}': {{.err}}",
    "translation": "Unable to delete rule '{{.name}}': {{.err}}"
  },
  {
    "id": "{{.ok}} deleted rule {{.name}}\n",
    "translation": "{{.ok}} deleted rule {{.name}}\n"
  },
  {
    "id": "list all rules",
    "translation": "list all rules"
  },
  {
    "id": "Namespace '{{.name}}' is invalid: {{.err}}\n",
    "translation": "Namespace '{{.name}}' is invalid: {{.err}}\n"
  },
  {
    "id": "Unable to obtain the list of rules for namespace '{{.name}}': {{.err}}",
    "translation": "Unable to obtain the list of rules for namespace '{{.name}}': {{.err}}"
  },
  {
    "note-to-translators": "DO NOT TRANSLATE THE 'yes' AND 'no'.  THOSE ARE FIXED CLI ARGUMENT VALUES",
    "id": "rule visibility `SCOPE`; yes = shared, no = private",
    "translation": "rule visibility `SCOPE`; yes = shared, no = private"
  },
  {
    "id": "automatically enable rule after creating it",
    "translation": "automatically enable rule after creating it"
  },
  {
    "id": "automatically disable rule before deleting it",
    "translation": "automatically disable rule before deleting it"
  },
  {
    "id": "summarize rule details",
    "translation": "summarize rule details"
  },
  {
    "id": "work with the sdk",
    "translation": "work with the sdk"
  },
  {
    "id": "install SDK artifacts",
    "translation": "install SDK artifacts"
  },
  {
    "id": "install SDK artifacts, where valid COMPONENT values are docker, ios, and bashauto",
    "translation": "install SDK artifacts, where valid COMPONENT values are docker, iOS, and bashauto"
  },
  {
    "id": "The SDK component argument is missing. One component (docker, ios, or bashauto) must be specified",
    "translation": "The SDK component argument is missing. One component (docker, ios, or bashauto) must be specified"
  },
  {
    "id": "Unable to generate '{{.name}}': {{.err}}",
    "translation": "Unable to generate '{{.name}}': {{.err}}"
  },
  {
    "id": "bash_completion_msg",
    "translation": "The bash auto-completion script ({{.name}}) is installed in the current directory.\nTo enable command line completion of wsk commands, source the auto completion script into your bash environment\n"
  },
  {
    "id": "The SDK component argument '{{.component}}' is invalid. Valid components are docker, ios and bashauto",
    "translation": "The SDK component argument '{{.component}}' is invalid. Valid components are docker, ios and bashauto"
  },
  {
    "id": "The file {{.name}} already exists.  Delete it and retry.",
    "translation": "The file {{.name}} already exists.  Delete it and retry."
  },
  {
    "id": "The {{.component}} SDK installation failed: {{.err}}",
    "translation": "The {{.component}} SDK installation failed: {{.err}}"
  },
  {
    "id": "The docker skeleton is now installed at the current directory.",
    "translation": "The docker skeleton is now installed at the current directory."
  },
  {
    "id": "Downloaded OpenWhisk iOS starter app. Unzip {{.name}} and open the project in Xcode.\n",
    "translation": "Downloaded OpenWhisk iOS starter app. Unzip {{.name}} and open the project in Xcode.\n"
  },
  {
    "id": "Unable to retrieve '{{.urlpath}}' SDK: {{.err}}",
    "translation": "Unable to retrieve '{{.urlpath}}' SDK: {{.err}}"
  },
  {
    "id": "Server failed to send the '{{.component}}' SDK: {{.err}}",
    "translation": "Server failed to send the '{{.component}}' SDK: {{.err}}"
  },
  {
    "id": "Error creating SDK file {{.name}}: {{.err}}",
    "translation": "Error creating SDK file {{.name}}: {{.err}}"
  },
  {
    "id": "Error copying server response into file: {{.err}}",
    "translation": "Error copying server response into file: {{.err}}"
  },
  {
    "id": "The directory {{.name}} already exists.  Delete it and retry.",
    "translation": "The directory {{.name}} already exists.  Delete it and retry."
  },
  {
    "id": "Error unGzipping file {{.name}}: {{.err}}",
    "translation": "Error unGzipping file {{.name}}: {{.err}}"
  },
  {
    "id": "Error untarring file {{.name}}: {{.err}}",
    "translation": "Error untarring file {{.name}}: {{.err}}"
  },
  {
    "id": "work with triggers",
    "translation": "work with triggers"
  },
  {
    "id": "fire trigger event",
    "translation": "fire trigger event"
  },
  {
    "id": "Unable to fire trigger '{{.name}}': {{.err}}",
    "translation": "Unable to fire trigger '{{.name}}': {{.err}}"
  },
  {
    "id": "{{.ok}} triggered /{{.namespace}}/{{.name}} with id {{.id}}\n",
    "translation": "{{.ok}} triggered /{{.namespace}}/{{.name}} with id {{.id}}\n"
  },
  {
    "id": "create new trigger",
    "translation": "create new trigger"
  },
  {
    "note-to-translators": "DO NOT TRANSLATE THE 'yes' AND 'no'.  THOSE ARE FIXED CLI ARGUMENT VALUES",
    "id": "Invalid --shared argument value '{{.argval}}'; valid values are 'yes' or 'no'",
    "translation": "Invalid --shared argument value '{{.argval}}'; valid values are 'yes' or 'no'"
  },
  {
    "id": "Unable to create trigger '{{.name}}': {{.err}}",
    "translation": "Unable to create trigger '{{.name}}': {{.err}}"
  },
  {
    "id": "{{.ok}} created trigger {{.name}}\n",
    "translation": "{{.ok}} created trigger {{.name}}\n"
  },
  {
    "id": "update an existing trigger, or create a trigger if it does not exist",
    "translation": "update an existing an trigger, or create a trigger if it does not exist"
  },
  {
    "id": "Unable to update trigger '{{.name}}': {{.err}}",
    "translation": "Unable to update trigger '{{.name}}': {{.err}}"
  },
  {
    "id": "{{.ok}} updated trigger {{.name}}\n",
    "translation": "{{.ok}} updated trigger {{.name}}\n"
  },
  {
    "id": "get trigger",
    "translation": "get trigger"
  },
  {
    "id": "Unable to get trigger '{{.name}}': {{.err}}",
    "translation": "Unable to get trigger '{{.name}}': {{.err}}"
  },
  {
    "id": "{{.ok}} got trigger {{.name}}\n",
    "translation": "{{.ok}} got trigger {{.name}}\n"
  },
  {
    "id": "delete trigger",
    "translation": "delete trigger"
  },
  {
    "id": "Unable to delete trigger '{{.name}}': {{.err}}",
    "translation": "Unable to delete trigger '{{.name}}': {{.err}}"
  },
  {
    "id": "{{.ok}} deleted trigger {{.name}}\n",
    "translation": "{{.ok}} deleted trigger {{.name}}\n"
  },
  {
    "id": "list all triggers",
    "translation": "list all triggers"
  },
  {
    "id": "Unable to obtain the list of triggers for namespace '{{.name}}': {{.err}}",
    "translation": "Unable to obtain the list of triggers for namespace '{{.name}}': {{.err}}"
  },
  {
    "id": "Unable to invoke trigger '{{.trigname}}' feed action '{{.feedname}}'; feed is not configured: {{.err}}",
    "translation": "Unable to invoke trigger '{{.trigname}}' feed action '{{.feedname}}'; feed is not configured: {{.err}}"
  },
  {
    "note-to-translators": "DO NOT TRANSLATE THE 'yes' AND 'no'.  THOSE ARE FIXED CLI ARGUMENT VALUES",
    "id": "trigger visibility `SCOPE`; yes = shared, no = private",
    "translation": "trigger visibility `SCOPE`; yes = shared, no = private"
  },
  {
    "id": "trigger feed `ACTION_NAME`",
    "translation": "trigger feed `ACTION_NAME`"
  },
  {
    "id": "summarize trigger details",
    "translation": "summarize trigger details"
  },
  {
    "id": "parameter values in `KEY VALUE` format",
    "translation": "parameter values in `KEY VALUE` format"
  },
  {
    "id": "`FILE` containing parameter values in JSON format",
    "translation": "`FILE` containing parameter values in JSON format"
  },
  {
    "id": "Arguments must be comma separated, and must be quoted if they contain spaces.",
    "translation": "Arguments must be comma separated, and must be quoted if they contain spaces."
  },
  {
    "id": "Invalid arguments: {{.err}}",
    "translation": "Invalid arguments: {{.err}}"
  },
  {
    "id": "The argument `{{.arg}}` is invalid: {{.err}}",
    "translation": "The argument `{{.arg}}` is invalid: {{.err}}"
  },
  {
    "id": "The argument `{{.arg}}` is invalid JSON: {{.err}}",
    "translation": "The argument `{{.arg}}` is invalid JSON: {{.err}}"
  },
  {
    "id": "private",
    "translation": "private"
  },
  {
    "id": "shared",
    "translation": "shared"
  },
  {
    "id": "The file '{{.name}}' does not exist.",
    "translation": "The file '{{.name}}' does not exist."
  },
  {
    "id": "Error creating unGzip file '{{.name}}': {{.err}}",
    "translation": "Error creating unGzip file '{{.name}}': {{.err}}"
  },
  {
    "id": "Error opening Gzip file '{{.name}}': {{.err}}",
    "translation": "Error opening Gzip file '{{.name}}': {{.err}}"
  },
  {
    "id": "Unable to unzip file '{{.name}}': {{.err}}",
    "translation": "Unable to unzip file '{{.name}}': {{.err}}"
  },
  {
    "id": "Unable to opens '{{.name}}' for unzipping: {{.err}}",
    "translation": "Unable to opens '{{.name}}' for unzipping: {{.err}}"
  },
  {
    "id": "Unable to create directory '{{.dir}}' while unzipping '{{.name}}': {{.err}}",
    "translation": "Unable to create directory '{{.dir}}' while unzipping '{{.name}}': {{.err}}"
  },
  {
    "id": "Unable to open zipped file '{{.file}}' while unzipping '{{.name}}': {{.err}}",
    "translation": "Unable to open zipped file '{{.file}}' while unzipping '{{.name}}': {{.err}}"
  },
  {
    "id": "Unable to create file '{{.file}}' while unzipping '{{.name}}': {{.err}}",
    "translation": "Unable to create file '{{.file}}' while unzipping '{{.name}}': {{.err}}"
  },
  {
    "id": "Error opening tar file '{{.name}}': {{.err}}",
    "translation": "Error opening tar file '{{.name}}': {{.err}}"
  },
  {
    "id": "Error reading tar file '{{.name}}': {{.err}}",
    "translation": "Error reading tar file '{{.name}}': {{.err}}"
  },
  {
    "id": "Unable to create directory '{{.dir}}' while untarring '{{.name}}': {{.err}}",
    "translation": "Unable to create directory '{{.dir}}' while untarring '{{.name}}': {{.err}}"
  },
  {
    "id": "Unable to create file '{{.file}}' while untarring '{{.name}}': {{.err}}",
    "translation": "Unable to create file '{{.file}}' while untarring '{{.name}}': {{.err}}"
  },
  {
    "id": "Unable to untar file '{{.name}}': {{.err}}",
    "translation": "Unable to untar file '{{.name}}': {{.err}}"
  },
  {
    "id": "Unable to untar '{{.name}}' due to unexpected tar file type\n",
    "translation": "Unable to untar '{{.name}}' due to unexpected tar file type\n"
  },
  {
    "id": "work with actions",
    "translation": "work with actions"
  },
  {
    "id": "create a new action",
    "translation": "create a new action"
  },
  {
    "id": "Unable to parse action command arguments: {{.err}}",
    "translation": "Unable to parse action command arguments: {{.err}}"
  },
  {
    "id": "Unable to create action: {{.err}}",
    "translation": "Unable to create action: {{.err}}"
  },
  {
    "id": "{{.ok}} created action {{.name}}\n",
    "translation": "{{.ok}} created action {{.name}}\n"
  },
  {
    "id": "update an existing action, or create an action if it does not exist",
    "translation": "update an existing action, or create an action if it does not exist"
  },
  {
    "id": "Unable to update action: {{.err}}",
    "translation": "Unable to update action: {{.err}}"
  },
  {
    "id": "{{.ok}} updated action {{.name}}\n",
    "translation": "{{.ok}} updated action {{.name}}\n"
  },
  {
    "id": "invoke action",
    "translation": "invoke action"
  },
  {
    "id": "Unable to invoke action '{{.name}}': {{.err}}",
    "translation": "Unable to invoke action '{{.name}}': {{.err}}"
  },
  {
    "id": "{{.ok}} invoked /{{.namespace}}/{{.name}} with id {{.id}}\n",
    "translation": "{{.ok}} invoked /{{.namespace}}/{{.name}} with id {{.id}}\n"
  },
  {
    "id": "get action",
    "translation": "get action"
  },
  {
    "id": "Unable to get action: {{.err}}",
    "translation": "Unable to get action: {{.err}}"
  },
  {
    "id": "action",
    "translation": "action"
  },
  {
    "id": "{{.ok}} got action {{.name}}\n",
    "translation": "{{.ok}} got action {{.name}}\n"
  },
  {
    "id": "delete action",
    "translation": "delete action"
  },
  {
    "id": "Unable to delete action: {{.err}}",
    "translation": "Unable to delete action: {{.err}}"
  },
  {
    "id": "{{.ok}} deleted action {{.name}}\n",
    "translation": "{{.ok}} deleted action {{.name}}\n"
  },
  {
    "id": "list all actions",
    "translation": "list all actions"
  },
  {
    "id": "Unable to obtain the list of actions for namespace '{{.name}}': {{.err}}",
    "translation": "Unable to obtain the list of actions for namespace '{{.name}}': {{.err}}"
  },
  {
    "id": "Could not find 'main' method in '{{.name}}'",
    "translation": "Could not find 'main' method in '{{.name}}'"
  },
  {
    "id": "Unable to obtain action '{{.name}}' to copy: {{.err}}",
    "translation": "Unable to obtain action '{{.name}}' to copy: {{.err}}"
  },
  {
    "id": "File '{{.name}}' is not a valid file or it does not exist: {{.err}}",
    "translation": "File '{{.name}}' is not a valid file or it does not exist: {{.err}}"
  },
  {
    "id": "Unable to read '{{.name}}': {{.err}}",
    "translation": "Unable to read '{{.name}}': {{.err}}"
  },
  {
    "id": "'{{.name}}' is not a supported action runtime",
    "translation": "'{{.name}}' is not a supported action runtime"
  },
  {
    "id": "creating an action from a .zip artifact requires specifying the action kind explicitly",
    "translation": "creating an action from a .zip artifact requires specifying the action kind explicitly"
  },
  {
    "id": "Java actions require --main to specify the fully-qualified name of the main class",
    "translation": "Java actions require --main to specify the fully-qualified name of the main class"
  },
  {
    "id": "treat ACTION as docker image path on dockerhub",
    "translation": "treat ACTION as docker image path on dockerhub"
  },
  {
    "id": "treat ACTION as the name of an existing action",
    "translation": "treat ACTION as the name of an existing action"
  },
  {
    "id": "treat ACTION as comma separated sequence of actions to invoke",
    "translation": "treat ACTION as comma separated sequence of actions to invoke"
  },
  {
    "id": "the `KIND` of the action runtime (example: swift:3, nodejs:6)",
    "translation": "the `KIND` of the action runtime (example: swift:3, nodejs:6)"
  },
  {
    "id": "the name of the action entry point (function or fully-qualified method name when applicable)",
    "translation": "the name of the action entry point (function or fully-qualified method name when applicable)"
  },
  {
    "id": "action visibility `SCOPE`; yes = shared, no = private",
    "translation": "action visibility `SCOPE`; yes = shared, no = private"
  },
  {
    "id": "the timeout `LIMIT` in milliseconds after which the action is terminated",
    "translation": "the timeout `LIMIT` in milliseconds after which the action is terminated"
  },
  {
    "id": "the maximum memory `LIMIT` in MB for the action",
    "translation": "the maximum memory `LIMIT` in MB for the action"
  },
  {
    "id": "the maximum log size `LIMIT` in MB for the action",
    "translation": "the maximum log size `LIMIT` in MB for the action"
  },
  {
    "id": "blocking invoke",
    "translation": "blocking invoke"
  },
  {
    "id": "show only activation result if a blocking activation (unless there is a failure)",
    "translation": "show only activation result if a blocking activation (unless there is a failure)"
  },
  {
    "id": "exclude the first `SKIP` number of actions from the result",
    "translation": "exclude the first `SKIP` number of actions from the result"
  },
  {
    "id": "only return `LIMIT` number of actions from the collection",
    "translation": "only return `LIMIT` number of actions from the collection"
  },
  {
    "id": "summarize action details",
    "translation": "summarize action details"
  },
  {
    "id": "work with activations",
    "translation": "work with activations"
  },
  {
    "id": "list activations",
    "translation": "list activations"
  },
  {
    "id": "Namespace '{{.name}}' is invalid",
    "translation": "Namespace '{{.name}}' is invalid"
  },
  {
    "id": "Unable to obtain the list of activations for namespace '{{.name}}': {{.err}}",
    "translation": "Unable to obtain the list of activations for namespace '{{.name}}': {{.err}}"
  },
  {
    "id": "get activation",
    "translation": "get activation"
  },
  {
    "id": "Unable to obtain activation record for '{{.id}}': {{.err}}",
    "translation": "Unable to obtain activation record for '{{.id}}': {{.err}}"
  },
  {
    "id": "activation result for /{{.namespace}}/{{.name}} ({{.status}} at {{.time}})\n",
    "translation": "activation result for /{{.namespace}}/{{.name}} ({{.status}} at {{.time}})\n"
  },
  {
    "id": "{{.ok}} got activation {{.id}}\n",
    "translation": "{{.ok}} got activation {{.id}}\n"
  },
  {
    "id": "get the logs of an activation",
    "translation": "get the logs of an activation"
  },
  {
    "id": "Unable to obtain logs for activation '{{.id}}': {{.err}}",
    "translation": "Unable to obtain logs for activation '{{.id}}': {{.err}}"
  },
  {
    "id": "Unable to obtain result information for activation '{{.id}}': {{.err}}",
    "translation": "Unable to obtain result information for activation '{{.id}}': {{.err}}"
  },
  {
    "id": "poll continuously for log messages from currently running actions",
    "translation": "poll continuously for log messages from currently running actions"
  },
  {
    "id": "Poll terminated",
    "translation": "Poll terminated"
  },
  {
    "id": "Enter Ctrl-c to exit.",
    "translation": "Enter Ctrl-c to exit."
  },
  {
    "id": "Polling for activation logs\n",
    "translation": "Polling for activation logs\n"
  },
  {
    "id": "\nActivation: {{.name}} ({{.id}})\n",
    "translation": "\nActivation: {{.name}} ({{.id}})\n"
  },
  {
    "id": "exclude the first `SKIP` number of activations from the result",
    "translation": "exclude the first `SKIP` number of activations from the result"
  },
  {
    "id": "only return `LIMIT` number of activations from the collection",
    "translation": "only return `LIMIT` number of activations from the collection"
  },
  {
    "id": "include full activation description",
    "translation": "include full activation description"
  },
  {
    "id": "return activations with timestamps earlier than `UPTO`; measured in milliseconds since Th, 01, Jan 1970",
    "translation": "return activations with timestamps earlier than `UPTO`; measured in milliseconds since Th, 01, Jan 1970"
  },
  {
    "id": "return activations with timestamps later than `SINCE`; measured in milliseconds since Th, 01, Jan 1970",
    "translation": "return activations with timestamps later than `SINCE`; measured in milliseconds since Th, 01, Jan 1970"
  },
  {
    "id": "summarize activation details",
    "translation": "summarize activation details"
  },
  {
    "id": "stop polling after `SECONDS` seconds",
    "translation": "stop polling after `SECONDS` seconds"
  },
  {
    "id": "start polling for activations `SECONDS` seconds ago",
    "translation": "start polling for activations `SECONDS` seconds ago"
  },
  {
    "id": "start polling for activations `MINUTES` minutes ago",
    "translation": "start polling for activations `MINUTES` minutes ago"
  },
  {
    "id": "start polling for activations `HOURS` hours ago",
    "translation": "start polling for activations `HOURS` hours ago"
  },
  {
    "id": "start polling for activations `DAYS` days ago",
    "translation": "start polling for activations `DAYS` days ago"
  },
  {
    "id": "Arguments for '{{.arg}}' must be a key/value pair",
    "translation": "Arguments for '{{.arg}}' must be a key/value pair"
  },
  {
    "id": "The parameter arguments are invalid: {{.err}}",
    "translation": "The parameter arguments are invalid: {{.err}}"
  },
  {
    "id": "The annotation arguments are invalid: {{.err}}",
    "translation": "The annotation arguments are invalid: {{.err}}"
  },
  {
    "id": "An action name and action are required.",
    "translation": "An action name and action are required."
  },
  {
    "id": "An action name is required.",
    "translation": "An action name is required."
  },
  {
    "id": "An action name is required. An action is optional.",
    "translation": "An action name is required. An action is optional."
  },
  {
    "id": "An activation ID is required.",
    "translation": "An activation ID is required."
  },
  {
    "id": "A package name and binding name are required.",
    "translation": "A package name and binding name are required."
  },
  {
    "id": "A package name is required.",
    "translation": "A package name is required."
  },
  {
    "id": "A rule name is required.",
    "translation": "A rule name is required."
  },
  {
    "id": "A rule, trigger and action name are required.",
    "translation": "A rule, trigger and action name are required."
  },
  {
    "id": "A trigger name is required.",
    "translation": "A trigger name is required."
  },
  {
    "id": "A trigger name is required. A payload is optional.",
    "translation": "A trigger name is required. A payload is optional."
  },
  {
    "id": "An optional namespace is the only valid argument.",
    "translation": "An optional namespace is the only valid argument."
  },
  {
    "id": "Invalid argument(s). {{.required}}",
    "translation": "Invalid argument(s). {{.required}}"
  },
  {
    "id": "Invalid argument(s): {{.args}}. {{.required}}",
    "translation": "Invalid argument(s): {{.args}}. {{.required}}"
  },
  {
    "id": "exactly",
    "translation": "exactly"
  },
  {
    "id": "at least",
    "translation": "at least"
  },
  {
    "id": "no more than",
    "translation": "no more than"
  },
  {
    "id": "No arguments are required.",
    "translation": "No arguments are required."
  },
  {
    "id": "status",
    "translation": "status"
  },
  {
    "id": "parameters",
    "translation": "parameters"
  },
  {
    "id": "default",
    "translation": "default"
  },
  {
    "id": "An argument must be provided for '{{.arg}}'",
    "translation": "An argument must be provided for '{{.arg}}'"
  },
  {
    "id": "The API host is not valid: {{.err}}",
    "translation": "The API host is not valid: {{.err}}"
  },
  {
    "id": "An API host must be provided.",
    "translation": "An API host must be provided."
  },
  {
    "id": "Invalid field filter '{{.arg}}'.",
    "translation": "Invalid field filter '{{.arg}}'."
  },
  {
    "id": "{{.ok}} got activation {{.id}}, displaying field {{.field}}\n",
    "translation": "{{.ok}} got activation {{.id}}, displaying field {{.field}}\n"
  },
  {
    "id": "{{.ok}} got action {{.name}}, displaying field {{.field}}\n",
    "translation": "{{.ok}} got action {{.name}}, displaying field {{.field}}\n"
  },
  {
    "id": "{{.ok}} got package {{.name}}, displaying field {{.field}}\n",
    "translation": "{{.ok}} got package {{.name}}, displaying field {{.field}}\n"
  },
  {
    "id": "{{.ok}} got rule {{.name}}, displaying field {{.field}}\n",
    "translation": "{{.ok}} got rule {{.name}}, displaying field {{.field}}\n"
  },
  {
    "id": "{{.ok}} got trigger {{.name}}, displaying field {{.field}}\n",
    "translation": "{{.ok}} got trigger {{.name}}, displaying field {{.field}}\n"
  },
  {
    "id": "An API path, an API verb, and an action name are required.",
    "translation": "An API path, an API verb, and an action name are required."
  },
  {
    "id": "An API path and an API verb are required.",
    "translation": "An API path and an API verb are required."
  },
  {
    "id":"'{{.name}}' is not a valid action name: {{.err}}",
    "translation": "'{{.name}}' is not a valid action name: {{.err}}"
  },
  {
    "id":"'{{.name}}' is not a valid action name.",
    "translation": "'{{.name}}' is not a valid action name."
  },
  {
    "id": "Unable to create API: {{.err}}",
    "translation": "Unable to create API: {{.err}}"
  },
  {
    "id": "{{.ok}} created API {{.path}} {{.verb}} for action {{.name}}\n{{.fullpath}}\n",
    "translation": "{{.ok}} created API {{.path}} {{.verb}} for action {{.name}}\n{{.fullpath}}\n"
  },
  {
    "id": "Unable to parse api command arguments: {{.err}}",
    "translation": "Unable to parse api command arguments: {{.err}}"
  },
  {
    "id": "create a new API",
    "translation": "create a new API"
  },
  {
    "id": "update an existing API",
    "translation": "update an existing API"
  },
  {
    "id": "Unable to update API: {{.err}}",
    "translation": "Unable to update API: {{.err}}"
  },
  {
    "id": "{{.ok}} updated API {{.path}} {{.verb}} for action {{.name}}\n{{.fullpath}}\n",
    "translation": "{{.ok}} updated API {{.path}} {{.verb}} for action {{.name}}\n{{.fullpath}}\n"
  },
  {
    "id": "get API",
    "translation": "get API"
  },
  {
    "id": "Unable to get API: {{.err}}",
    "translation": "Unable to get API: {{.err}}"
  },
  {
    "id": "delete an API",
    "translation": "delete an API"
  },
  {
    "id": "Unable to delete action: {{.err}}",
    "translation": "Unable to delete action: {{.err}}"
  },
  {
    "id": "{{.ok}} deleted API {{.basepath}}\n",
    "translation": "{{.ok}} deleted API {{.basepath}}\n"
  },
  {
    "id": "{{.ok}} deleted {{.path}} from {{.basepath}}\n",
    "translation": "{{.ok}} deleted {{.path}} from {{.basepath}}\n"
  },
  {
    "id": "{{.ok}} deleted {{.path}} {{.verb}} from {{.basepath}}\n",
    "translation": "{{.ok}} deleted {{.path}} {{.verb}} from {{.basepath}}\n"
  },
  {
    "id": "list APIs",
    "translation": "list APIs"
  },
  {
    "id": "Unable to obtain the API list: {{.err}}",
    "translation": "Unable to obtain the API list: {{.err}}"
  },
  {
    "id": "'{{.verb}}' is not a valid API verb.  Valid values are: {{.verbs}}",
    "translation": "'{{.verb}}' is not a valid API verb.  Valid values are: {{.verbs}}"
  },
  {
    "id": "`ACTION` to invoke when API is called",
    "translation": "`ACTION` to invoke when API is called"
  },
  {
    "id": "relative `API_PATH` of API",
    "translation": "relative `API_PATH` of API"
  },
  {
    "id": "API `API_VERB`",
    "translation": "API `API_VERB`"
  },
  {
    "id": "API collection `NAME` (default NAMESPACE)",
    "translation": "API collection `NAME` (default NAMESPACE)"
  },
  {
    "id": "The API `BASE_PATH` to which the API_PATH is relative",
    "translation": "The API `BASE_PATH` to which the API_PATH is relative"
  },
  {
    "id": "{{.ok}} APIs\n",
    "translation": "{{.ok}} APIs\n"
  },
  {
    "id": "{{.url}} {{.operation}} {{.action}}\n",
    "translation": "{{.url}} {{.operation}} {{.action}}\n"
  },
  {
    "id": "An API base path is required.  An optional API relative path and operation may also be provided.",
    "translation": "An API base path is required.  An optional API relative path and operation may also be provided."
  },
  {
    "id": "'{{.path}}' must begin with '/'.",
    "translation": "'{{.path}}' must begin with '/'."
  },
  {
    "id": "Unable to parse swagger file: {{.err}}",
    "translation": "Unable to parse swagger file: {{.err}}"
  },
  {
    "id": "Error reading swagger file '{{.name}}': {{.err}}",
    "translation": "Error reading swagger file '{{.name}}': {{.err}}"
  },
  {
    "id": "A configuration file was not specified.",
    "translation": "A configuration file was not specified."
  },
  {
    "id": "Error parsing swagger file '{{.name}}': {{.err}}",
    "translation": "Error parsing swagger file '{{.name}}': {{.err}}"
  },
  {
    "id": "Swagger file is invalid (missing basePath, info, paths, or swagger fields)",
    "translation": "Swagger file is invalid (missing basePath, info, paths, or swagger fields)"
  },
  {
    "id": "Swagger file basePath must start with a leading slash (/)",
    "translation": "Swagger file basePath must start with a leading slash (/)"
  },
  {
    "id": "API does not exist for basepath {{.basepath}}",
    "translation": "API does not exist for basepath {{.basepath}}"
  },
  {
    "id": "API does not exist for API name {{.apiname}}",
    "translation": "API does not exist for API name {{.apiname}}"
  },
  {
    "id": "An API name can only be specified once",
    "translation": "An API name can only be specified once"
  },
  {
    "id": "Specify a swagger file or specify an API base path with an API path, an API verb, and an action name.",
    "translation": "Specify a swagger file or specify an API base path with an API path, an API verb, and an action name."
  },
  {
    "id": "Invalid argument(s). Specify a swagger file or specify an API base path with an API path, an API verb, and an action name.",
    "translation": "Invalid argument(s). Specify a swagger file or specify an API base path with an API path, an API verb, and an action name."
  },
  {
    "id": "Cannot use value '{{.arg}}' for shared.",
    "translation": "Cannot use value '{{.arg}}' for shared."
  },
  {
    "id": "Action",
    "translation": "Action"
  },
  {
    "id": "Verb",
    "translation": "Verb"
  },
  {
    "id": "API Name",
    "translation": "API Name"
  },
  {
    "id": "URL",
    "translation": "URL"
  },
  {
    "id": "Base path",
    "translation": "Base path"
  },
  {
    "id": "Path",
    "translation": "Path"
  },
  {
    "id": "display full description of each API",
    "translation": "display full description of each API"
  }
]
