---
# This role will install Kafka with Zookeeper in group 'kafka' in the environment inventory

- name: "pull the zookeeper:{{ zookeeper.version }} image"
  shell: "docker pull zookeeper:{{ zookeeper.version }}"

- name: (re)start zookeeper
  docker_container:
    name: zookeeper
    image: zookeeper:{{ zookeeper.version }}
    state: started
    recreate: true
    restart_policy: "{{ docker.restart.policy }}"
    ports:
      - "{{ zookeeper.port }}:2181"

- name: wait until the Zookeeper in this host is up and running
  action: shell echo ruok | nc -w 3 -i 1 {{ inventory_hostname }} {{ zookeeper.port }}
  register: result
  until: (result.rc == 0) and (result.stdout == 'imok')
  retries: 36
  delay: 5

- name: "pull the ches/kafka:{{ kafka.version }} image"
  shell: "docker pull ches/kafka:{{ kafka.version }}"

- name: (re)start kafka
  docker_container:
    name: kafka
    image: ches/kafka:{{ kafka.version }}
    state: started
    recreate: true
    restart_policy: "{{ docker.restart.policy }}"
    links:
      - "zookeeper:zookeeper"
    env:
      "KAFKA_ADVERTISED_HOST_NAME": "{{ inventory_hostname }}"
    ports:
      - "{{ kafka.port }}:9092"

- name: wait until the kafka server started up
  shell: docker logs kafka
  register: result
  until: ('[Kafka Server 0], started' in result.stdout)
  retries: 10
  delay: 5

- name: create the active-ack topic
  shell: "docker exec kafka bash -c 'unset JMX_PORT; kafka-topics.sh --create --topic {{ item }} --replication-factor 1 --partitions 1 --zookeeper {{ inventory_hostname }}:{{ zookeeper.port }}'"
  with_items:
    - completed

- name: create the invoker topics
  shell: "docker exec kafka bash -c 'unset JMX_PORT; kafka-topics.sh --create --topic invoke{{ item.0 }} --replication-factor 1 --partitions 1 --zookeeper {{ inventory_hostname }}:{{ zookeeper.port }}'"
  with_indexed_items: "{{ groups['invokers'] }}"
