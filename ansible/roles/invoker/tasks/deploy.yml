---
# This role installs invokers.

- include: docker_login.yml

- name: "pull action images with tag {{docker_image_tag}}"
  shell: "docker pull {{docker_registry}}{{item}}:{{docker_image_tag}}"
  with_items:
    - '{{ docker_image_prefix }}/invoker'
    - '{{ docker_image_prefix }}/dockerskeleton'
    - '{{ docker_image_prefix }}/nodejsaction'
    - '{{ docker_image_prefix }}/nodejs6action'
    - '{{ docker_image_prefix }}/pythonaction'
    - '{{ docker_image_prefix }}/swiftaction'
    - '{{ docker_image_prefix }}/swift3action'
    - '{{ docker_image_prefix }}/javaaction'
  when: docker_registry != ""

- name: determine docker root dir
  uri:  url="http://{{ inventory_hostname }}:{{ docker.port }}/info" return_content=yes
  register: dockerInfo

- name: ensure invoker log directory is created with permissions
  file:
    path: "{{ whisk_logs_dir }}/invoker{{play_hosts.index(inventory_hostname)}}"
    state: directory
    mode: 0777
  become: true

- name: define options when deploying invoker on Ubuntu
  set_fact:
    linuxOptions: "-v /sys/fs/cgroup:/sys/fs/cgroup -v /run/runc:/run/runc -v {{ runcLocation | default('/usr/bin/docker-runc') }}:/usr/bin/docker-runc -v /usr/lib/x86_64-linux-gnu/libapparmor.so.1:/usr/lib/x86_64-linux-gnu/libapparmor.so.1"
  when: whisk_version_name != "mac"

- name: start invoker using docker cli
  shell: >
        docker run -d
        --userns=host
        --pid=host
        --privileged
        {{ linuxOptions | default('') }}
        --name invoker{{play_hosts.index(inventory_hostname)}}
        --hostname invoker{{play_hosts.index(inventory_hostname)}}
        --restart {{ docker.restart.policy }}
        -e COMPONENT_NAME=invoker{{play_hosts.index(inventory_hostname)}}
        -e CONSULSERVER_HOST={{ groups['consul_servers'] | first }}
        -e CONSUL_HOST_PORT4={{ consul.port.http }}
        -e PORT=8080
        -e SELF_DOCKER_ENDPOINT={{inventory_hostname}}:{{docker.port}}
        -e SERVICE_CHECK_HTTP=/ping
        -e SERVICE_CHECK_TIMEOUT=2s
        -e SERVICE_CHECK_INTERVAL=15s
        -v {{whisk_logs_dir}}/invoker{{play_hosts.index(inventory_hostname)}}:/logs
        -v {{dockerInfo["json"]["DockerRootDir"]}}/containers/:/containers
        -p {{invoker.port + play_hosts.index(inventory_hostname)}}:8080
        {{docker_registry}}{{ docker_image_prefix }}/invoker:{{docker_image_tag}}
        /bin/sh -c "/invoker/bin/invoker {{play_hosts.index(inventory_hostname)}} >> /logs/invoker{{play_hosts.index(inventory_hostname)}}_logs.log 2>&1"


# todo: re-enable docker_container module once https://github.com/ansible/ansible-modules-core/issues/5054 is resolved

- name: wait until Invoker is up and running
  uri:
    url: "http://{{ inventory_hostname }}:{{invoker.port + play_hosts.index(inventory_hostname)}}/ping"
  register: result
  until: result.status == 200
  retries: 12
  delay: 5
